@import './_base';

.capabilities-section {

  $main-text-col-width: 21rem;  // = 336px. 20rem (320px) should be sufficient; 21rem makes sure there's a buffer just in case.
  $card-container-height: 1990px;   // hard-coded... for now, at least
  $section-top-bottom-padding: 80px;
  $section-height: $card-container-height - 40px + 2 * $section-top-bottom-padding;

  $upper-section-mobile-height: 500px;      // hard-coded for now; can be changed if vertical responsiveness is requested
  $lower-section-mobile-height: 317px;      // hard-coded for now; can be changed if vertical responsiveness is requested
  $main-text-col-mobile-min-height: 345px;  // allows for proper vertical placement of cards even when there are fewer lines of body text (i.e., when the screen is wider)

  @include respond-to(not-mobile) {
    height: $section-height;
  }
  position: relative;
  
  @include respond-to(mobile) {
    padding: 0 !important;
    overflow-x: hidden;
    min-height: $upper-section-mobile-height + $lower-section-mobile-height;
  }

  .vertical-lines-container {
    z-index: 0;
  }

  .parallax-background-wrapper {
    @include respond-to(not-mobile) {
      height: $section-height / 2;  // this should be 1/2 the total desired height, since this element appears twice on the page
    }
    @include respond-to(mobile) {
      height: 100%;
    }
    position: absolute;
    left: 0;
    width: 100%;
    z-index: -1;
    &.first {
      top: 0;
    }
    &.second {
      top: $section-height / 2; // this should be 1/2 the total desired height, since this element should begin just where the first one ends
      @include respond-to(mobile) {
        display: none;
      }
    }
  }
  .parallax-background {
    @include respond-to(not-mobile) {
      background-attachment: fixed;
    }
    height: 100%;
  }

  .caption:first-of-type {
    margin: 0;
  }

  .heading-2 {
    margin-top: 26px;
    @include respond-to(mobile) {
      margin-top: 14px;
    }
  }

  .body-text-2 {
    line-height: 2;
    margin-bottom: 40px;
    @include respond-to(mobile) {
      margin-bottom: 32px;
    }
  }

  .two-thirds-desktop {
    background: $color-gray-super-light;  
    @include respond-to(not-mobile) {
      height: 100%;
      // width: calc(100% / 3 * 2);  // keeps gray background at 2/3 screen width. position of edge between background panels (w/ respect to content) is variable.
      width: calc(50% + (960px / 4));   // keeps edge of blue background static w/ respect to the cards.
      float: left;
      padding-left: $section-default-padding-lr;
    }
    @include respond-to(mobile) {
      height: $upper-section-mobile-height;
    }
  }

  .one-third-desktop {
    @include respond-to(not-mobile) {
      height: 100%;
      // width: calc(100% / 3);  // keeps blue background at 1/3 screen width. position of edge between background panels (w/ respect to content) is variable.
      width: calc(50% - (960px / 4));   // keeps edge of blue background static w/ respect to the cards.
      float: right;
      padding-right: $section-default-padding-lr;
    }
    @include respond-to(mobile) {
      height: $lower-section-mobile-height;
    }
  }

  .capabilities-background-image {
    @include respond-to(mobile) {
      background-image: linear-gradient(211deg, rgba(1,70,245, 0.8), rgba(0,44,155, 0.8)), 
                        url(../assets/capabilities.jpg);
    }
    @include respond-to(tablet) {
      background-image: linear-gradient(211deg, rgba(1,70,245, 0.8), rgba(0,44,155, 0.8)), 
                        url(../assets/capabilities@2x.jpg);
    }
    @include respond-to(desktop) {
      background-image: linear-gradient(211deg, rgba(1,70,245, 0.8), rgba(0,44,155, 0.8)), 
                        url(../assets/capabilities@3x.jpg);
    }
    background-size: cover;
    background-repeat: no-repeat;
    background-position: right;
    background-color: $color-brand-primary;   // fallback
  }

  .capabilities-main-text-col {
    width: $main-text-col-width;
    padding-top: $section-top-bottom-padding;
    padding-bottom: $section-top-bottom-padding + 6px;  // not 100% sure why, but this value seems to be just right
    @include respond-to(not-mobile) {
      position: sticky;
      position: -webkit-sticky;
      top: 0;
      left: 0;
    }
    @include respond-to(mobile) {
      width: 100%;
      padding: 40px 40px 24px 40px;
      margin-left: 0;
      min-height: $main-text-col-mobile-min-height;
    }
  }

  /* Any button styles specific to this section go here.
    Everything else is inherited from global .button-inset, 
    .button-inset-full, and .button-inset-mobile styles. */
     
  .buttons {
    display: flex;
    flex-direction: column;
    @include respond-to(mobile) {
      flex-direction: row;
      justify-content: space-between;
    }
  }

  .button-inset {
    @include respond-to(mobile) {
      &:first-of-type {
        margin-right: 16px;
      }
    }
    @include respond-to(not-mobile) {
      width: 307px;
      &:first-of-type {
        margin-bottom: 16px;
      }
    }
  }

  .capabilities-main-text-col {
    .caption,
    .heading-2,
    .body-text-2,
    .button-inset {
      opacity: 0;
    }
  }
  @include respond-to(not-mobile) {
    .dp-card {
      opacity: 0;
    }
  }

  $default-card-width: 280px;
  $default-card-width-mobile: 264px;
  $default-card-height-mobile: 392px;
  $space-between-cards-mobile: 20px;
  $card-container-padding: 16px;
  
  .capabilities-card-container {
    @include respond-to(not-mobile) {
      display: block;
      position: absolute;
      left: $main-text-col-width + 3rem;
      width: 2 * $default-card-width + 20px;  
      height: $card-container-height;
      top: $section-top-bottom-padding + $card-container-padding;
      padding: $card-container-padding 0;
    }
    @include respond-to(mobile) {
      display: none;
    }
  }

  .capabilities-card-container-mobile {
    @include respond-to(not-mobile) {
      display: none;
    }
    @include respond-to(mobile) {
      .slick-track {
        padding: $card-container-padding 0;
      }
      &.slick-initialized .slick-slide {
        width: $default-card-width-mobile + $space-between-cards-mobile !important;
      }
      .slick-slide:focus {
        outline: none;
      }
      .dp-card {
        width: $default-card-width-mobile !important;
        min-width: $default-card-width-mobile;
        height: $default-card-height-mobile !important;
        padding: 40px 47px 40px 40px;
        margin: 0 auto;
      }
    }
  }
  
  .dp-card {
    width: $default-card-width;
    z-index: 1;
    padding: 40px 60px 40px 40px;
    margin-bottom: 20px;

    .dp-card-title {
      font-size: $font-size-large;
    }
  }

  @include respond-to(not-mobile) {
    .capabilities-design-card-container,
    .capabilities-dev-card-container {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: stretch;
    }
  }

  // alter relative positioning of right-hand cards on desktop only
  @include respond-to(not-mobile) {
    .design-card-2,
    .design-card-4,
    .dev-card-2,
    .dev-card-4 {
      margin-top: -60px;
      margin-bottom: 68px;
    }
  }



  /* Main Text Animation */
  @keyframes fade-in {
    from  { opacity: 0; }
    to    { opacity: 1; }
  }
  
  @mixin fade-in-on-delay($delay) {
    opacity: 0;
    animation: fade-in 1.5s ease-in-out $delay forwards;
  }

  $delay-multiplier: 0.1s;

  .fade-in-elem.caption:first-of-type {
    @include fade-in-on-delay(1 * $delay-multiplier);
  }
  .fade-in-elem.heading-2 {
    @include fade-in-on-delay(2 * $delay-multiplier);
  }
  .fade-in-elem.body-text-2 {
    @include fade-in-on-delay(3 * $delay-multiplier);
  }
  .fade-in-elem.button-inset:first-of-type {
    @include fade-in-on-delay(4 * $delay-multiplier);
  }
  .fade-in-elem.button-inset:nth-of-type(2) {
    @include fade-in-on-delay(5 * $delay-multiplier);
  }
  /* End Main Text Animation */


  /* Cards Animation */
  @keyframes fade-in-slide-up {
    from {
      opacity: 0;
      margin-top: 28px;
    }
    to {
      opacity: 1;
      margin-top: 8px;
    }
  }

  @keyframes fade-in-slide-up-higher {
    from {
      opacity: 0;
      margin-top: -20px;
    }
    to {
      opacity: 1;
      margin-top: -40px;
    }
  }

  $card-animation-duration: 1s;

  @mixin fade-in-slide-up-on-delay($delay) {
    opacity: 0;
    animation: fade-in-slide-up $card-animation-duration ease-in-out $delay forwards;
  }

  @mixin fade-in-slide-up-higher-on-delay($delay) {
    opacity: 0;
    animation: fade-in-slide-up-higher $card-animation-duration ease-in-out $delay forwards;
  }

  $card-delay-multiplier: 0.1s;

  .design-card-1.first-animation {
    @include fade-in-slide-up-on-delay(1 * $card-delay-multiplier);
  }
  .design-card-2.first-animation {
    @include fade-in-slide-up-higher-on-delay(2 * $card-delay-multiplier);
  }
  .design-card-3.first-animation {
    @include fade-in-slide-up-on-delay(3 * $card-delay-multiplier);
  }
  .design-card-4.first-animation {
    @include fade-in-slide-up-higher-on-delay(4 * $card-delay-multiplier);
  }
  .dev-card-1.first-animation {
    @include fade-in-slide-up-on-delay(5 * $card-delay-multiplier);
  }
  .dev-card-2.first-animation {
    @include fade-in-slide-up-higher-on-delay(6 * $card-delay-multiplier);
  }
  .dev-card-3.first-animation {
    @include fade-in-slide-up-on-delay(7 * $card-delay-multiplier);
  }
  .dev-card-4.first-animation {
    @include fade-in-slide-up-higher-on-delay(8 * $card-delay-multiplier);
  }
  .dev-card-5.first-animation {
    @include fade-in-slide-up-on-delay(9 * $card-delay-multiplier);
  }
  /* End Cards Animation */
}